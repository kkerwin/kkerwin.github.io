{"version":3,"sources":["App.module.css","components/password/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/password/styles.module.css"],"names":["module","exports","PasswordInput","React","memo","length","className","htmlType","onSubmit","useState","val","setVal","foucs","setFoucs","useEffect","offsetLeft","useMemo","left","display","classNames","styles","password","onContextMenu","onPaste","onCopy","onCut","autoComplete","type","maxLength","onFocus","onBlur","value","onChange","e","target","box","style","Array","keys","map","i","idx","key","input","active","defaultProps","HASHTYPES","GenForm","pwd","setPwd","content","hmac","vals","setVals","handleFieldChange","field","persist","c","form","formItem","t","placeholder","title","toString","min","max","onClick","Object","entries","alert","Hashes","b64_hmac","substring","parseInt","result","href","document","createElement","setAttribute","body","appendChild","setSelectionRange","select","execCommand","removeChild","App","offset","setOffset","guard","right","wrapper","show","v","SHA256","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.32f384f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"guard\":\"App_guard__BvqZj\",\"left\":\"App_left__E_tlW\",\"right\":\"App_right__2c9Y2\",\"formItem\":\"App_formItem__6AUDJ\",\"form\":\"App_form__4NzmE\",\"wrapper\":\"App_wrapper__3nCti\",\"show\":\"App_show__32RSl\",\"result\":\"App_result__18Sjs\"};","import React,{ useState, useMemo, useEffect } from 'react'\r\nimport classNames from 'classnames'\r\nimport styles from './styles.module.css'\r\n\r\n\r\ninterface PasswordInputProps {\r\n    htmlType ?: 'password' | 'number' \r\n    length ?: number\r\n    className ?: string\r\n    onSubmit ?: (val:string) => void\r\n}\r\n\r\nconst PasswordInput:React.FC<PasswordInputProps> = React.memo(({ length, className, htmlType, onSubmit }) => {\r\n    const [ val, setVal ] = useState('')\r\n    const [ foucs, setFoucs ] = useState(false)    \r\n    const handleChange = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setVal(e.target.value)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(val.length === length && onSubmit){            \r\n            onSubmit(val)\r\n        }\r\n    },[val, length, onSubmit])\r\n\r\n    const offsetLeft = useMemo(()=>{\r\n        if(!foucs){\r\n            return { display:\"none\" }\r\n        }\r\n        if(val.length === length){\r\n            return { left:(50 + 14) * ( length - 1  )}  \r\n        }\r\n        return { left:(50 + 14) * val.length }\r\n    },[val, foucs, length])\r\n    \r\n    return (\r\n        <div className={classNames(styles.password, className )}>\r\n            <input                 \r\n                onContextMenu={()=>false} \r\n                onPaste={()=>false} \r\n                onCopy={()=>false} \r\n                onCut ={()=>false} \r\n                autoComplete=\"off\" \r\n                type={htmlType}  \r\n                maxLength={length} \r\n                onFocus={() => {setFoucs(true)}} \r\n                onBlur={() => setFoucs(false)} \r\n                value={val} onChange={handleChange}\r\n                />\r\n            <div className={styles.box} style={offsetLeft}></div>\r\n            {\r\n                [ ...new Array(length).keys() ].map((i,idx)=>(<span key={idx}\r\n                    className={classNames(styles.input,{\r\n                        [ styles.active ] : foucs && val.length === idx\r\n                    })}>\r\n                    { (idx + 1) <= val.length && '*'  }\r\n                </span>))\r\n            }            \r\n        </div>\r\n    )\r\n})\r\n\r\nPasswordInput.defaultProps = {\r\n    length:6,\r\n    htmlType:\"password\"\r\n}\r\n\r\nexport default PasswordInput","import React, { useState } from 'react'\nimport classNames from 'classnames'\nimport Hashes from 'jshashes'\nimport { PassworInput } from '../src/components'\nimport styles from './App.module.css'\n\ninterface AppProps {\n\n}\n\nconst SHA256 = \"CPV5EptDwD/3NuF2E1AShpmJBHeTps0CXmIXhM+QHAA=\"\n\nconst HASHTYPES = [ 'MD5', 'SHA1', 'SHA256', 'SHA512', 'RMD160' ]\n\nconst GenForm:React.FC<any> = () => {\n\tconst [ pwd, setPwd ] = useState('')\n\tconst [ vals, setVals ] = useState({\n\t\ttype:HASHTYPES[0],\n\t\tcontent:'',\n\t\thmac:'',\n\t\tlength:\"4\",\n\t})\n\n\tconst handleFieldChange = (e:React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,field:string) => {\n\t\te.persist()\t\t\n\t\tsetVals(c=>({ ...c, [field]:e.target.value }))\n\t}\t\n\n\tconst handleGen = () => {\n\t\tfor(let [key, val] of Object.entries(vals)){\n\t\t\tif(!val){\n\t\t\t\talert(key + ' 没有填写')\n\t\t\t\treturn\n\t\t\t}\n\t\t}\t\n\t\tconst encrpty = new Hashes[vals.type]\t\n\t\tconst password = (encrpty.b64_hmac(vals.hmac,vals.content) as string).substring(2, parseInt(vals.length) + 2)  \t\t\n\t\tsetPwd(password)\n\t}\n\n\tconst copy = () => {\n        if (pwd === '') {\n            return\n        }\n        const input = document.createElement('input')\n        input.setAttribute('readonly', 'readonly')\n        input.setAttribute('value', pwd)\n        document.body.appendChild(input)\n        input.setSelectionRange(0, 9999)\n        input.select()\n        if (document.execCommand('copy')) {\n\t\t\tdocument.execCommand('copy')\n\t\t\talert('已复制到剪贴板!')\n        }\n        document.body.removeChild(input)\n\t}\n\t\n\treturn <div className={styles.form}>\n\t\t<div className={styles.formItem}>\n\t\t\t<label>\n\t\t\t\t加密类型：\n\t\t\t</label>\n\t\t\t<span>\n\t\t\t\t<select value={ vals.type } onChange={e=>handleFieldChange(e,'type')}>\n\t\t\t\t\t{ HASHTYPES.map(t=>(<option key={t} value={t}>{t}</option>)) }\n\t\t\t\t</select>\n\t\t\t</span>\n\t\t</div>\n\t\t<div className={styles.formItem}>\n\t\t\t<label>\n\t\t\t\t内容：\n\t\t\t</label>\n\t\t\t<span>\n\t\t\t\t<input value={ vals.content } onChange={e=>handleFieldChange(e,'content')} type=\"text\" placeholder=\"110@qq.com#1\" />\n\t\t\t</span>\n\t\t</div>\n\t\t<div className={styles.formItem}>\n\t\t\t<label>\n\t\t\t\tHMAC：\n\t\t\t</label>\n\t\t\t<span>\n\t\t\t\t<input value={ vals.hmac } onChange={e=>handleFieldChange(e,'hmac')} type=\"password\" placeholder=\"hmac\"/>\n\t\t\t</span>\n\t\t</div>\n\t\t<div className={styles.formItem}>\n\t\t\t<label>\n\t\t\t\t长度：\n\t\t\t</label>\n\t\t\t<span>\n\t\t\t\t<input title={vals.length.toString()} value={ vals.length } onChange={e=>handleFieldChange(e,'length')} min={4} max={30} type=\"range\"/>\n\t\t\t</span>\n\t\t</div>\n\t\t<div className={styles.formItem}>\t\n\t\t\t<label></label>\t\t\n\t\t\t<span>\n\t\t\t\t<button type=\"button\" onClick={handleGen}>\n\t\t\t\t\t立即生成\n\t\t\t\t</button>\n\t\t\t</span>\n\t\t</div>\n\t\t{\n\t\t\tpwd && (\n\t\t\t\t<div className={styles.result}>\n\t\t\t\t\t<a href='#' title=\"点击复制\" onClick={copy}>{ pwd }</a>\n\t\t\t\t</div>\n\t\t\t)\t\n\t\t}\t\t\n\t</div>\n}\n\nconst App:React.FC<AppProps> = () => {\t\t\n\tconst [ offset, setOffset ] = useState(0)\n\tconst handleGuard = (v:string) => {\n\t\tconst guard = new Hashes.SHA256().b64_hmac(`${v}_iphone_password`,v)\n\t\tif(guard !== SHA256){\n\t\t\tsetTimeout(()=>{\n\t\t\t\talert('密码错误')\n\t\t\t},600)\n\t\t}else{\n\t\t\tsetOffset(-40)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={styles.App}>\n\t\t\t<div className={styles.guard}>\n\t\t\t\t<div className={styles.left} style={offset ? { left: offset + 'vw' } : {}}></div>\n\t\t\t\t<div className={styles.right} style={offset ? { right: offset +'vw' } : {}}></div>\n\t\t\t\t<div className={classNames(styles.wrapper,{\n\t\t\t\t\t\t[ styles.show ] : offset\n\t\t\t\t\t})}>\n\t\t\t\t\t{ offset ? <GenForm /> : null\t }\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\t!offset ? <PassworInput onSubmit={handleGuard}/> : null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"password\":\"styles_password__2TuYA\",\"box\":\"styles_box__3l4sf\",\"input\":\"styles_input__11nif\",\"active\":\"styles_active__QkS8d\"};"],"sourceRoot":""}